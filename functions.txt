  // Ajouter une tÃ¢che
  const addTask = (title) => {
    const newTask = { title, completed: false };
    fetch('http://localhost:5000/tasks', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify(newTask),
    })
      .then((response) => response.json())
      .then((data) => setTasks([...tasks, data]));
  };

  // Supprimer une tÃ¢che
  const deleteTask = (id) => {
    fetch(`http://localhost:5000/tasks/${id}`, { method: 'DELETE' }).then(() => {
      setTasks(tasks.filter((task) => task.id !== id));
    });
  };

  // // Basculer l'Ã©tat "completed" d'une tÃ¢che
  const toggleTaskCompletion = (id) => {
    const task = tasks.find((task) => task.id === id);
    const updatedTask = { ...task, completed: !task.completed };

    fetch(`http://localhost:5000/tasks/${id}`, {
      method: 'PUT',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify(updatedTask),
    })
      .then((response) => response.json())
      .then((data) =>
        setTasks(tasks.map((task) => (task.id === id ? data : task)))
      );
  };